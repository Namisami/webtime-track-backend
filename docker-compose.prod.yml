version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 4
    restart: unless-stopped
    env_file:
      - .env.prod
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network

  db:
    image: postgres:13
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  nginx:
    image: nginx:1.21-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
    networks:
      - backend-network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  backend-network:
    driver: bridge
